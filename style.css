/*!*************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss ***!
  \*************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Modak&family=Roboto&display=swap);
/*!*****************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss (1) ***!
  \*****************************************************************************************************************/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*::selection {
  background-color: #34d399;
}

body {
  background-color: #1e293b;
  font-family: "Roboto", sans-serif;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: row-reverse;
  justify-content: space-between;
  align-items: center;
}
body .main_content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 100%;
}
@keyframes decreaseOpacity {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}
@keyframes increaseOpacity {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
body .main_content .task_content .main_tasks {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
body .new_task_form {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
  background-color: #1e293b;
  width: 300px;
  height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 20px;
  gap: 20px;
  animation: appear;
  animation-duration: 0.3s;
  border: 4px solid #34d399;
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
    z-index: 1;
  }
}
@keyframes hideTaskForm {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    z-index: -1;
  }
}
body .new_task_form input {
  background: none;
  border: none;
  border-bottom: 2px solid #34d399;
  padding: 6px;
  color: #E6E6E6;
  font-weight: bold;
  width: 200px;
}
body .new_task_form input:focus {
  outline: none;
}
body .new_task_form button {
  width: 80px;
  padding: 5px 10px;
  height: auto;
  color: #E6E6E6;
  font-weight: 900;
  border: none;
  background-color: #34d399;
  border: 2px solid #34d399;
  border-radius: 8px;
  cursor: pointer;
}
body .new_task_form button:hover {
  transform: scale(1.05);
  transition: 50ms ease-in-out;
  box-shadow: 0 0 10px #34d399;
  background-color: #34d399;
  color: #1e293b;
}

header {
  width: auto;
  font-family: "Modak", cursive;
}
header p {
  color: #0f172a;
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 130px;
  margin: 0 auto;
}

.main_content {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

.sidebar {
  width: 200px;
  height: 100%;
  padding: 5px;
}
@keyframes decreaseOpacity {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}
@keyframes increaseOpacity {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
.sidebar .sidebar_bg {
  border-radius: 15px;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-color: #34d399;
}
.sidebar .sidebar_bg .todo_nav {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  font-weight: bolder;
  margin-top: 30%;
  gap: 10px;
}
.sidebar .sidebar_bg .todo_nav .date_links {
  gap: 5px;
}
.sidebar .sidebar_bg .todo_nav a {
  cursor: pointer;
  padding: 3px 6px;
}
.sidebar .sidebar_bg .todo_nav a:hover {
  background-color: #059669;
  border-radius: 9px;
}
.sidebar .sidebar_bg .todo_nav ul {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}
.sidebar .sidebar_bg .todo_nav ul .active_project {
  border-radius: 9px;
  background-color: #059669;
}
.sidebar .sidebar_bg .bg_text {
  color: #10b981;
  font-family: "Modak", cursive;
  transform: rotate(-90deg);
  font-size: 130px;
  margin-left: 128px;
  margin-bottom: 50px;
}
.sidebar .sidebar_bg .projects {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 10px;
  margin-top: 5px;
}
.sidebar .sidebar_bg .projects span {
  margin-left: -15px;
  font-size: 1.1em;
}
.sidebar .sidebar_bg .projects a {
  font-size: 0.9em;
}
.sidebar .sidebar_bg .projects .projects_list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 8px;
  width: 120px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container:hover {
  background-color: #059669;
  border-radius: 9px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container:hover .x_icon {
  display: block;
  width: 18px;
  height: auto;
  margin-right: 2px;
  cursor: pointer;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container a {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  text-align: center;
  overflow-wrap: break-word;
  padding: 3px 6px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container .x_icon {
  display: none;
}
.sidebar .sidebar_bg .projects .projects_list .active_project {
  border-radius: 9px;
  background-color: #059669;
}
.sidebar .sidebar_bg .projects .project_name_container:nth-child(1):hover .x_icon,
.sidebar .sidebar_bg .projects .project_name_container:nth-child(2):hover .x_icon {
  display: none;
}
.sidebar .sidebar_bg .projects .new_projects button {
  width: 100px;
  border: 2px solid #10b981;
  color: #10b981;
  font-weight: bolder;
  border-radius: 10px;
  padding: 2px 5px;
  background: none;
  cursor: pointer;
}
.sidebar .sidebar_bg .projects .new_projects button:hover {
  background-color: #10b981;
  color: #1e293b;
}
.sidebar .sidebar_bg .projects .new_projects input[type=text] {
  margin-bottom: 10px;
  width: 100px;
  display: none;
  padding: 3px 5px;
  background: none;
  border: 2px solid #10b981;
  color: #E6E6E6;
  font-weight: bold;
  border-radius: 11px;
}
.sidebar .sidebar_bg .projects .new_projects input[type=text]:focus {
  outline: none;
}

main {
  width: auto;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
main a {
  cursor: pointer;
  color: #676767;
}
main .add_task {
  font-weight: bolder;
}
main .tasks_list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

.task {
  width: 400px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  min-height: 70px;
  width: 800px;
  font-size: 18px;
}
.task .task_title {
  width: auto;
  max-width: 250px;
  word-wrap: break-word;
  margin: 10px;
}
.task .info {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
}
.task .info input {
  background-color: #1e293b;
  border: none;
  border-bottom: 2px solid #34d399;
  color: #E6E6E6;
}
.task .info input:focus {
  outline: none;
}
.task .info input::selection {
  color: #1e293b;
}
.task .info .input_date {
  border: none;
}
@media (max-width: 960px) {
  .task {
    width: 500px;
  }
}
.task .delete_task, .task .date {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.task .trash_icon, .task .calendar_icon {
  width: 22px;
  height: auto;
}
.task .input_date {
  cursor: pointer;
  border: none;
  padding: 2px;
  width: 27px;
  margin: 0;
  font-size: 1.1em;
  background: none;
  color: #7c7c7c;
}
.task .input_date:focus {
  outline: none;
}
.task .input_date::selection {
  background-color: #34d399;
  color: #1e293b;
}

.not_finished {
  border: 3px solid #34d399;
  border-radius: 22px;
}
.not_finished input[type=checkbox] {
  appearance: none;
  background-color: #1e293b;
  margin: 0;
  font: inherit;
  color: #34d399;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid #34d399;
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.not_finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em #34d399;
  border-radius: 0.1em;
}
.not_finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

.finished {
  border: 3px solid rgba(52, 211, 153, 0.4);
  color: rgba(230, 230, 230, 0.4);
  text-decoration: line-through;
  border-radius: 22px;
}
.finished input[type=checkbox] {
  appearance: none;
  background-color: #1e293b;
  margin: 0;
  font: inherit;
  color: rgba(52, 211, 153, 0.4);
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid rgba(52, 211, 153, 0.4);
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em rgba(52, 211, 153, 0.4);
  border-radius: 0.1em;
}
.finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

footer {
  color: #E6E6E6;
  margin-bottom: 5px;
}
footer a {
  text-decoration: none;
  color: #34d399;
}

@media all and (max-width: 600px) {
  .add_task {
    margin-bottom: 60px;
  }
  .burger_menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar {
    display: none;
  }
  .sidebar .sidebar_bg {
    background-color: #1e293b;
    border: 3px solid #34d399;
    box-shadow: 0 0 2px red;
  }
  .main_content {
    width: 100vw;
  }
  .main_content header p {
    font-size: 85px;
  }
  .main_content .task_content {
    width: auto;
  }
  .main_content .task_content .main_tasks .tasks_list .task {
    font-size: 0.95em;
    width: 320px;
    height: auto;
    min-height: 50px;
    margin: 2px 5px;
  }
  .main_content .task_content .main_tasks .tasks_list .task input[type=checkbox] {
    min-width: 17px;
    min-height: 17px;
  }
  .main_content .task_content .main_tasks .tasks_list .task .task_title {
    width: auto;
    word-wrap: break-word;
    margin: 10px;
  }
  .main_content .task_content .main_tasks .tasks_list .task .trash_icon {
    width: 19px;
    height: auto;
  }
  .main_content .task_content .main_tasks .tasks_list .task .info input {
    max-width: 120px;
  }
}
.burger_menu {
  display: none;
  -webkit-tap-highlight-color: transparent;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translate(-50%);
  margin-bottom: 30px;
  width: 60px;
  height: 55px;
  border-radius: 17px;
  color: white;
  background-color: #34d399;
  gap: 6px;
  cursor: pointer;
}
.burger_menu .top_line, .burger_menu .middle_line, .burger_menu .bottom_line {
  background-color: #1e293b;
  display: inline;
  width: 70%;
  height: 6px;
  border-radius: 4px;
}
.burger_menu .middle_line.active {
  display: none;
}
.burger_menu .top_line.active {
  position: absolute;
  animation: rotateTop 0.5s forwards;
}
.burger_menu .bottom_line.active {
  position: absolute;
  animation: rotateBottom 0.5s forwards;
}
.burger_menu .top_line.deactivate {
  position: absolute;
  animation: returnTop 0.5s forwards;
}
.burger_menu .middle_line.deactivate {
  display: flex;
}
.burger_menu .bottom_line.deactivate {
  position: absolute;
  animation: returnBottom 0.5s forwards;
}
.burger_menu .line_show {
  position: relative;
  display: inline;
}
@keyframes rotateTop {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(45deg);
  }
}
@keyframes rotateBottom {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(-45deg);
  }
}
@keyframes returnTop {
  from {
    transform: rotate(45deg);
  }
  to {
    transform: rotate(0);
  }
}
@keyframes returnBottom {
  from {
    transform: rotate(-45deg);
  }
  to {
    transform: rotate(0);
  }
}
@keyframes slowlyShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media all and (max-width: 600px) {
  .burger_menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar_mobile {
    animation: showSidebar 0.3s forwards;
    position: absolute;
    left: 50%;
    bottom: 0;
    margin-bottom: 100px;
    transform: translate(-50%);
    display: flex;
    height: auto;
    width: 80%;
  }
  .sidebar_mobile .bg_text {
    display: none;
  }
  .sidebar_mobile .sidebar_bg {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar_mobile .sidebar_bg .todo_nav {
    margin: 40px 0;
  }
  @keyframes showSidebar {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes hideSidebar {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
      z-index: -1;
    }
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUuY3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQTtFQUNJO0VBQ0E7RUFDQTtBQ0FKOztBREdBO0VBQ0kseUJFRmM7QURFbEI7O0FEUUE7RUFDSSx5QkVoQlM7RUZpQlQsaUNFRFU7RUZFVjtFQUNBO0VHcEJBO0VBQ0EsMkJIcUJjO0VHcEJkLDhCSG9CMkI7RUduQjNCLG1CSG1CMEM7QUNIOUM7QURLSTtFR3hCQTtFQUNBLHNCSHdCa0I7RUd2QmxCLDhCSHVCMEI7RUd0QjFCLG1CSHNCeUM7RUFDckM7QUNBUjtBRW5CSztFQUNHO0lBQ0k7RUZxQlY7RUVuQk07SUFDSTtFRnFCVjtBQUNGO0FFbkJJO0VBQ0k7SUFDSTtFRnFCVjtFRW5CTTtJQUNJO0VGcUJWO0FBQ0Y7QURYWTtFRy9CUjtFQUNBLHNCSCtCMEI7RUc5QjFCLHVCSDhCa0M7RUc3QmxDLG1CSDZCMEM7RUFDOUI7QUNnQmhCO0FEWEk7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLHlCRTFDSztFRjJDTDtFQUNBO0VHN0NKO0VBQ0Esc0JINkNrQjtFRzVDbEIsdUJINEMwQjtFRzNDMUIsbUJIMkNrQztFQUM5QjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FDZ0JSO0FEZFE7RUFDSTtJQUNJO0VDZ0JkO0VEZFU7SUFDSTtJQUNBO0VDZ0JkO0FBQ0Y7QURiUTtFQUNJO0lBQ0k7RUNlZDtFRGJVO0lBQ0k7SUFDQTtFQ2VkO0FBQ0Y7QURaUTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBRUEsY0U1RUM7RUY2RUQ7RUFDQSxZRTdERTtBRDBFZDtBRFhZO0VBQ0k7QUNhaEI7QURUUTtFQUNJO0VBQ0E7RUFDQTtFQUVBLGNFMUZDO0VGMkZEO0VBQ0E7RUFDQSx5QkUxRk07RUYyRk47RUFDQTtFQUNBO0FDVVo7QURSWTtFQUNJO0VBQ0E7RUFDQTtFQUNBLHlCRWpHRjtFRmtHRSxjRXpHSDtBRG1IYjs7QUduSEE7RUFDSTtFQUNBLDZCRmVhO0FEdUdqQjtBR3BISTtFQUNJLGNGTU87RUVMUDtFRFBKO0VBQ0Esc0JDT2tCO0VETmxCLHVCQ00wQjtFREwxQixtQkNLa0M7RUFDOUI7RUFDQTtBSHlIUjs7QUdySEE7RUFDSTtFRGZBO0VBQ0Esc0JDZWM7RURkZCw4QkNjc0I7RURidEIsbUJDYXFDO0FIMkh6Qzs7QUkxSUE7RUFDSTtFQUNBO0VBQ0E7QUo2SUo7QUUxSUs7RUFDRztJQUNJO0VGNElWO0VFMUlNO0lBQ0k7RUY0SVY7QUFDRjtBRTFJSTtFQUNJO0lBQ0k7RUY0SVY7RUUxSU07SUFDSTtFRjRJVjtBQUNGO0FJbkpJO0VBQ0k7RUFDQSxjSGJLO0VDSFQ7RUFDQSxzQkVnQmtCO0VGZmxCLDhCRWUwQjtFRmQxQixtQkVjeUM7RUFDckM7RUFDQTtFQUNBO0VBQ0EseUJIZlU7QUR1S2xCO0FJckpRO0VGeEJKO0VBQ0Esc0JFd0JzQjtFRnZCdEIsdUJFdUI4QjtFRnRCOUIsdUJFc0JzQztFQUM5QjtFQUNBO0VBQ0E7QUowSlo7QUl4Slk7RUFDSTtBSjBKaEI7QUl2Slk7RUFDSTtFQUNBO0FKeUpoQjtBSXZKZ0I7RUFDSSx5Qkg3QkE7RUc4QkE7QUp5SnBCO0FJckpZO0VGNUNSO0VBQ0Esc0JFNEMwQjtFRjNDMUIsdUJFMkNrQztFRjFDbEMsdUJFMEMwQztBSjBKOUM7QUl4SmdCO0VBQ0k7RUFDQSx5Qkh2Q0E7QURpTXBCO0FJckpRO0VBRUksY0huRE87RUdvRFAsNkJIdkNLO0VHd0NMO0VBQ0E7RUFDQTtFQUNBO0FKc0paO0FJbkpRO0VGaEVKO0VBQ0Esc0JFZ0VzQjtFRi9EdEIsdUJFK0Q4QjtFRjlEOUIsdUJFOERzQztFQUM5QjtFQUNBO0FKd0paO0FJdEpZO0VBQ0k7RUFDQTtBSndKaEI7QUlySlk7RUFDSTtBSnVKaEI7QUlwSlk7RUY5RVI7RUFDQSxzQkU4RTBCO0VGN0UxQix1QkU2RWtDO0VGNUVsQyx1QkU0RTBDO0VBQzlCO0VBQ0E7QUp5SmhCO0FJdkpnQjtFQUNJO0VGcEZoQjtFQUNBLG1CRW9GOEI7RUZuRjlCLDhCRW1GbUM7RUZsRm5DLG1CRWtGa0Q7QUo0SnREO0FJMUpvQjtFQUNJLHlCSDlFSjtFRytFSTtBSjRKeEI7QUkzSndCO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSjZKNUI7QUl6Sm9CO0VGbkdoQjtFQUNBLG1CRW1Ha0M7RUZsR2xDLDhCRWtHdUM7RUZqR3ZDLG1CRWlHc0Q7RUFDbEM7RUFDQTtFQUNBO0VBQ0E7QUo4SnhCO0FJekpvQjtFQUNJO0FKMkp4QjtBSXhKZ0I7RUFDSTtFQUNBLHlCSHpHQTtBRG1RcEI7QUlqSm9COztFQUNJO0FKb0p4QjtBSTlJZ0I7RUFDSTtFQUNBO0VBQ0EsY0hqSUQ7RUdrSUM7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBSmdKcEI7QUk5SW9CO0VBQ0kseUJIeklMO0VHMElLLGNIOUlYO0FEOFJiO0FJNUlnQjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBLGNIdkpQO0VHd0pPO0VBQ0E7QUo4SXBCO0FJNUlvQjtFQUNJO0FKOEl4Qjs7QUs1U0E7RUFDSTtFQUNBO0VISEE7RUFDQSxzQkdHYztFSEZkLHVCR0VzQjtFSER0QixtQkdDOEI7RUFDOUI7QUxrVEo7QUtqVEk7RUFDSTtFQUNBLGNKQ0s7QURrVGI7QUtqVEk7RUFDSTtBTG1UUjtBS2hUSTtFSGRBO0VBQ0Esc0JHY2tCO0VIYmxCLHVCR2EwQjtFSFoxQixtQkdZa0M7RUFDOUI7QUxxVFI7O0FNcFVBO0VBQ0k7RUpGQTtFQUNBLG1CSUVjO0VKRGQsOEJJQ21CO0VKQW5CO0VJQ0E7RUFHQTtFQUNBO0VBQ0EsZUxVUTtBRDhUWjtBTXRVSTtFQUVJO0VBQ0E7RUFDQTtFQUNBO0FOdVVSO0FNcFVJO0VKbkJBO0VBQ0EsbUJJbUJrQjtFSmxCbEIsOEJJa0J1QjtFSmpCdkIsbUJJaUJzQztFQUNsQztBTnlVUjtBTXZVUTtFQUNJLHlCTHZCQztFS3dCRDtFQUNBO0VBQ0EsY0x4QkM7QURpV2I7QU12VVk7RUFDSTtBTnlVaEI7QU10VVk7RUFDSSxjTGpDSDtBRHlXYjtBTXBVUTtFQUNJO0FOc1VaO0FNblVJO0VBekNKO0lBMENRO0VOc1VOO0FBQ0Y7QU1yVUk7RUo3Q0E7RUFDQSxtQkk2Q2tCO0VKNUNsQix1Qkk0Q3VCO0VKM0N2QixtQkkyQytCO0VBQzNCO0FOMFVSO0FNdlVJO0VBQ0k7RUFDQTtBTnlVUjtBTXRVSTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU53VVI7QU10VVE7RUFDSTtBTndVWjtBTXJVUTtFQUNJLHlCTGhFTTtFS2lFTixjTHRFQztBRDZZYjs7QU1sVUE7RUFDSTtFQUNBO0FOcVVKO0FNcFVJO0VBQ0k7RUFDQSx5QkxoRks7RUtpRkw7RUFDQTtFQUNBLGNMNUVNO0VLNkVOO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU5zVVI7QU1wVVE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBTnNVWjtBTW5VUTtFQUNJO0FOcVVaOztBTWhVQTtFQUNJO0VBQ0E7RUFDQTtFQUNBO0FObVVKO0FNalVJO0VBQ0k7RUFDQSx5QkxySEs7RUtzSEw7RUFDQTtFQUNBLDhCTDNHUTtFSzRHUjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FObVVSO0FNalVRO0VBQ0k7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7QU5tVVo7QU1oVVE7RUFDSTtBTmtVWjs7QU8vY0E7RUFDSSxjTkNTO0VNQVQ7QVBrZEo7QU9oZEk7RUFDSTtFQUNBLGNOQ007QURpZGQ7O0FReGRBO0VBRUk7SUFDSTtFUjBkTjtFUXZkRTtJTlBBO0lBQ0Esc0JNT2tCO0lOTmxCLHVCTU0wQjtJTkwxQixtQk1La0M7RVI0ZHBDO0VRemRFO0lBQ0k7RVIyZE47RVExZE07SUFDSSx5QlBiQztJT2NEO0lBQ0E7RVI0ZFY7RVF4ZEU7SUFDSTtFUjBkTjtFUXZkVTtJQUNJO0VSeWRkO0VRcmRNO0lBQ0k7RVJ1ZFY7RVFqZGtCO0lBQ0k7SUFDQTtJQUNBO0lBQ0E7SUFDQTtFUm1kdEI7RVFqZHNCO0lBQ0k7SUFDQTtFUm1kMUI7RVFoZHNCO0lBQ0k7SUFDQTtJQUNBO0VSa2QxQjtFUWhkc0I7SUFDSTtJQUNBO0VSa2QxQjtFUTljMEI7SUFDSTtFUmdkOUI7QUFDRjtBUzVnQkE7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0EseUJSUGM7RVFRZDtFQUNBO0FUOGdCSjtBUzVnQkk7RUFDSSx5QlJqQks7RVFrQkw7RUFDQTtFQUNBO0VBQ0E7QVQ4Z0JSO0FTMWdCSTtFQUNJO0FUNGdCUjtBU3pnQkk7RUFDSTtFQUNBO0FUMmdCUjtBU3hnQkk7RUFDSTtFQUNBO0FUMGdCUjtBU3ZnQkk7RUFDSTtFQUNBO0FUeWdCUjtBU3RnQkk7RUFDSTtBVHdnQlI7QVNyZ0JJO0VBQ0k7RUFDQTtBVHVnQlI7QVNwZ0JJO0VBQ0k7RUFDQTtBVHNnQlI7QVNuZ0JJO0VBQ0k7SUFDSTtFVHFnQlY7RVNuZ0JNO0lBQ0k7RVRxZ0JWO0FBQ0Y7QVNsZ0JJO0VBQ0k7SUFDSTtFVG9nQlY7RVNsZ0JNO0lBQ0k7RVRvZ0JWO0FBQ0Y7QVNqZ0JJO0VBQ0k7SUFDSTtFVG1nQlY7RVNqZ0JNO0lBQ0k7RVRtZ0JWO0FBQ0Y7QVNoZ0JJO0VBQ0k7SUFDSTtFVGtnQlY7RVNoZ0JNO0lBQ0k7RVRrZ0JWO0FBQ0Y7QVMvZkk7RUFDSTtJQUNJO0VUaWdCVjtFUy9mTTtJQUNJO0VUaWdCVjtBQUNGOztBUzdmQTtFQUdJO0lQNUdBO0lBQ0Esc0JPNEdrQjtJUDNHbEIsdUJPMkcwQjtJUDFHMUIsbUJPMEdrQztFVGlnQnBDO0VTOWZFO0lBQ0k7SUFNQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0VUMmZOO0VTdGdCTTtJQUNJO0VUd2dCVjtFUzVmTTtJUGhJSjtJQUNBLHNCT2lJc0I7SVBoSXRCLHVCT2dJOEI7SVAvSDlCLG1CTytIc0M7RVRnZ0J4QztFUy9mVTtJQUNJO0VUaWdCZDtFUzdmTTtJQUNJO01BQ0k7SVQrZlo7SVM3ZlE7TUFDSTtJVCtmWjtFQUNGO0VTNWZNO0lBQ0k7TUFDSTtJVDhmWjtJUzVmUTtNQUNJO01BQ0E7SVQ4Zlo7RUFDRjtBQUNGLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Fzcy9fYm9keS5zY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zYXNzL21haW4uc2NzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Fzcy9fdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Nhc3MvX21peGlucy5zY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zYXNzL19oZWFkZXIuc2NzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Fzcy9fc2lkZWJhci5zY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zYXNzL19jb250ZW50LnNjc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Nhc3MvX3Rhc2suc2NzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Fzcy9fZm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Nhc3MvX21lZGlhLXZpZXcuc2NzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc2Fzcy9fYnVyZ2VyTWVudS5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJy4vc3R5bGVzJyBhcyAqO1xyXG5cclxuKiB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuKjo6c2VsZWN0aW9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbn1cclxuXHJcbi8vIGh0bWwge1xyXG4vLyAgICAgaGVpZ2h0OiAxMDAlO1xyXG4vLyAgICAgd2lkdGg6IDEwMCU7XHJcbi8vIH1cclxuXHJcbmJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtZmFtaWx5O1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIEBpbmNsdWRlIGZsZXgocm93LXJldmVyc2UsIHNwYWNlLWJldHdlZW4sIGNlbnRlcik7XHJcblxyXG4gICAgLm1haW5fY29udGVudCB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIHNwYWNlLWJldHdlZW4sIGNlbnRlcik7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIEBpbmNsdWRlIGFuaW1hdGVPcGFjaXR5KCk7XHJcblxyXG4gICAgICAgIC50YXNrX2NvbnRlbnQge1xyXG5cclxuICAgICAgICAgICAgLm1haW5fdGFza3Mge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcclxuICAgICAgICAgICAgICAgIGdhcDogMjBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubmV3X3Rhc2tfZm9ybSB7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgICAgIGdhcDogMjBweDtcclxuICAgICAgICBhbmltYXRpb246IGFwcGVhcjtcclxuICAgICAgICBhbmltYXRpb24tZHVyYXRpb246IC4zcztcclxuICAgICAgICBib3JkZXI6IDRweCBzb2xpZCAkc2Vjb25kYXJ5LWNvbG9yO1xyXG5cclxuICAgICAgICBAa2V5ZnJhbWVzIGFwcGVhciB7XHJcbiAgICAgICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0byB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQGtleWZyYW1lcyBoaWRlVGFza0Zvcm0gIHtcclxuICAgICAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkdGhpcmQtY29sb3I7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDZweDtcclxuICAgICAgICAgICAgLy8gYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICBjb2xvcjogJGZvbnQtY29sb3I7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICB3aWR0aDogJGlucHV0LXdpZHRoO1xyXG5cclxuICAgICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgICB3aWR0aDogODBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgLy8gYmFja2dyb3VuZC1jb2xvcjogJHRoaXJkLWNvbG9yO1xyXG4gICAgICAgICAgICBjb2xvcjogJGZvbnQtY29sb3I7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgJHRoaXJkLWNvbG9yO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IDUwbXMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMTBweCAkdGhpcmQtY29sb3I7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGhpcmQtY29sb3I7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Nb2RhayZmYW1pbHk9Um9ib3RvJmRpc3BsYXk9c3dhcFwiKTtcbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbio6OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNGQzOTk7XG59XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUyOTNiO1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcbiAgd2lkdGg6IDEwMHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbmJvZHkgLm1haW5fY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuQGtleWZyYW1lcyBkZWNyZWFzZU9wYWNpdHkge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbn1cbkBrZXlmcmFtZXMgaW5jcmVhc2VPcGFjaXR5IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5ib2R5IC5tYWluX2NvbnRlbnQgLnRhc2tfY29udGVudCAubWFpbl90YXNrcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG59XG5ib2R5IC5uZXdfdGFza19mb3JtIHtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGdhcDogMjBweDtcbiAgYW5pbWF0aW9uOiBhcHBlYXI7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4zcztcbiAgYm9yZGVyOiA0cHggc29saWQgIzM0ZDM5OTtcbn1cbkBrZXlmcmFtZXMgYXBwZWFyIHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG59XG5Aa2V5ZnJhbWVzIGhpZGVUYXNrRm9ybSB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgei1pbmRleDogLTE7XG4gIH1cbn1cbmJvZHkgLm5ld190YXNrX2Zvcm0gaW5wdXQge1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMzRkMzk5O1xuICBwYWRkaW5nOiA2cHg7XG4gIGNvbG9yOiAjRTZFNkU2O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgd2lkdGg6IDIwMHB4O1xufVxuYm9keSAubmV3X3Rhc2tfZm9ybSBpbnB1dDpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5ib2R5IC5uZXdfdGFza19mb3JtIGJ1dHRvbiB7XG4gIHdpZHRoOiA4MHB4O1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBjb2xvcjogI0U2RTZFNjtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzRkMzk5O1xuICBib3JkZXI6IDJweCBzb2xpZCAjMzRkMzk5O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmJvZHkgLm5ld190YXNrX2Zvcm0gYnV0dG9uOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbiAgdHJhbnNpdGlvbjogNTBtcyBlYXNlLWluLW91dDtcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggIzM0ZDM5OTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0ZDM5OTtcbiAgY29sb3I6ICMxZTI5M2I7XG59XG5cbmhlYWRlciB7XG4gIHdpZHRoOiBhdXRvO1xuICBmb250LWZhbWlseTogXCJNb2Rha1wiLCBjdXJzaXZlO1xufVxuaGVhZGVyIHAge1xuICBjb2xvcjogIzBmMTcyYTtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTMwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubWFpbl9jb250ZW50IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnNpZGViYXIge1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogNXB4O1xufVxuQGtleWZyYW1lcyBkZWNyZWFzZU9wYWNpdHkge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAwLjU7XG4gIH1cbn1cbkBrZXlmcmFtZXMgaW5jcmVhc2VPcGFjaXR5IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMC41O1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyB7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIGNvbG9yOiAjRTZFNkU2O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNGQzOTk7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAudG9kb19uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIG1hcmdpbi10b3A6IDMwJTtcbiAgZ2FwOiAxMHB4O1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnRvZG9fbmF2IC5kYXRlX2xpbmtzIHtcbiAgZ2FwOiA1cHg7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAudG9kb19uYXYgYSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogM3B4IDZweDtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC50b2RvX25hdiBhOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA1OTY2OTtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnRvZG9fbmF2IHVsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnRvZG9fbmF2IHVsIC5hY3RpdmVfcHJvamVjdCB7XG4gIGJvcmRlci1yYWRpdXM6IDlweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA1OTY2OTtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5iZ190ZXh0IHtcbiAgY29sb3I6ICMxMGI5ODE7XG4gIGZvbnQtZmFtaWx5OiBcIk1vZGFrXCIsIGN1cnNpdmU7XG4gIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XG4gIGZvbnQtc2l6ZTogMTMwcHg7XG4gIG1hcmdpbi1sZWZ0OiAxMjhweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZ2FwOiAxMHB4O1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAucHJvamVjdHMgc3BhbiB7XG4gIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgZm9udC1zaXplOiAxLjFlbTtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyBhIHtcbiAgZm9udC1zaXplOiAwLjllbTtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyAucHJvamVjdHNfbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgZ2FwOiA4cHg7XG4gIHdpZHRoOiAxMjBweDtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyAucHJvamVjdHNfbGlzdCAucHJvamVjdF9uYW1lX2NvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAucHJvamVjdHMgLnByb2plY3RzX2xpc3QgLnByb2plY3RfbmFtZV9jb250YWluZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDU5NjY5O1xuICBib3JkZXItcmFkaXVzOiA5cHg7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAucHJvamVjdHMgLnByb2plY3RzX2xpc3QgLnByb2plY3RfbmFtZV9jb250YWluZXI6aG92ZXIgLnhfaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMThweDtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IDJweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnByb2plY3RzIC5wcm9qZWN0c19saXN0IC5wcm9qZWN0X25hbWVfY29udGFpbmVyIGEge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHBhZGRpbmc6IDNweCA2cHg7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAucHJvamVjdHMgLnByb2plY3RzX2xpc3QgLnByb2plY3RfbmFtZV9jb250YWluZXIgLnhfaWNvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uc2lkZWJhciAuc2lkZWJhcl9iZyAucHJvamVjdHMgLnByb2plY3RzX2xpc3QgLmFjdGl2ZV9wcm9qZWN0IHtcbiAgYm9yZGVyLXJhZGl1czogOXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDU5NjY5O1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnByb2plY3RzIC5wcm9qZWN0X25hbWVfY29udGFpbmVyOm50aC1jaGlsZCgxKTpob3ZlciAueF9pY29uLFxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnByb2plY3RzIC5wcm9qZWN0X25hbWVfY29udGFpbmVyOm50aC1jaGlsZCgyKTpob3ZlciAueF9pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyAubmV3X3Byb2plY3RzIGJ1dHRvbiB7XG4gIHdpZHRoOiAxMDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgIzEwYjk4MTtcbiAgY29sb3I6ICMxMGI5ODE7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHBhZGRpbmc6IDJweCA1cHg7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5zaWRlYmFyIC5zaWRlYmFyX2JnIC5wcm9qZWN0cyAubmV3X3Byb2plY3RzIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMGI5ODE7XG4gIGNvbG9yOiAjMWUyOTNiO1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnByb2plY3RzIC5uZXdfcHJvamVjdHMgaW5wdXRbdHlwZT10ZXh0XSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgZGlzcGxheTogbm9uZTtcbiAgcGFkZGluZzogM3B4IDVweDtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzEwYjk4MTtcbiAgY29sb3I6ICNFNkU2RTY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBib3JkZXItcmFkaXVzOiAxMXB4O1xufVxuLnNpZGViYXIgLnNpZGViYXJfYmcgLnByb2plY3RzIC5uZXdfcHJvamVjdHMgaW5wdXRbdHlwZT10ZXh0XTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbm1haW4ge1xuICB3aWR0aDogYXV0bztcbiAgY29sb3I6ICNFNkU2RTY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG59XG5tYWluIGEge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjNjc2NzY3O1xufVxubWFpbiAuYWRkX3Rhc2sge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxubWFpbiAudGFza3NfbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDIwcHg7XG59XG5cbi50YXNrIHtcbiAgd2lkdGg6IDQwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgbWluLWhlaWdodDogNzBweDtcbiAgd2lkdGg6IDgwMHB4O1xuICBmb250LXNpemU6IDE4cHg7XG59XG4udGFzayAudGFza190aXRsZSB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDI1MHB4O1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIG1hcmdpbjogMTBweDtcbn1cbi50YXNrIC5pbmZvIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBnYXA6IDEwcHg7XG59XG4udGFzayAuaW5mbyBpbnB1dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNGQzOTk7XG4gIGNvbG9yOiAjRTZFNkU2O1xufVxuLnRhc2sgLmluZm8gaW5wdXQ6Zm9jdXMge1xuICBvdXRsaW5lOiBub25lO1xufVxuLnRhc2sgLmluZm8gaW5wdXQ6OnNlbGVjdGlvbiB7XG4gIGNvbG9yOiAjMWUyOTNiO1xufVxuLnRhc2sgLmluZm8gLmlucHV0X2RhdGUge1xuICBib3JkZXI6IG5vbmU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogOTYwcHgpIHtcbiAgLnRhc2sge1xuICAgIHdpZHRoOiA1MDBweDtcbiAgfVxufVxuLnRhc2sgLmRlbGV0ZV90YXNrLCAudGFzayAuZGF0ZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4udGFzayAudHJhc2hfaWNvbiwgLnRhc2sgLmNhbGVuZGFyX2ljb24ge1xuICB3aWR0aDogMjJweDtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuLnRhc2sgLmlucHV0X2RhdGUge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbiAgcGFkZGluZzogMnB4O1xuICB3aWR0aDogMjdweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDEuMWVtO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogIzdjN2M3Yztcbn1cbi50YXNrIC5pbnB1dF9kYXRlOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbi50YXNrIC5pbnB1dF9kYXRlOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzRkMzk5O1xuICBjb2xvcjogIzFlMjkzYjtcbn1cblxuLm5vdF9maW5pc2hlZCB7XG4gIGJvcmRlcjogM3B4IHNvbGlkICMzNGQzOTk7XG4gIGJvcmRlci1yYWRpdXM6IDIycHg7XG59XG4ubm90X2ZpbmlzaGVkIGlucHV0W3R5cGU9Y2hlY2tib3hdIHtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlMjkzYjtcbiAgbWFyZ2luOiAwO1xuICBmb250OiBpbmhlcml0O1xuICBjb2xvcjogIzM0ZDM5OTtcbiAgd2lkdGg6IDEuMTVlbTtcbiAgaGVpZ2h0OiAxLjE1ZW07XG4gIGJvcmRlcjogMC4xNWVtIHNvbGlkICMzNGQzOTk7XG4gIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMC4wNzVlbSk7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLm5vdF9maW5pc2hlZCBpbnB1dFt0eXBlPWNoZWNrYm94XTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDAuNmVtO1xuICBoZWlnaHQ6IDAuNmVtO1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICB0cmFuc2l0aW9uOiAxMjBtcyB0cmFuc2Zvcm0gZWFzZS1pbi1vdXQ7XG4gIGJveC1zaGFkb3c6IGluc2V0IDFlbSAxZW0gIzM0ZDM5OTtcbiAgYm9yZGVyLXJhZGl1czogMC4xZW07XG59XG4ubm90X2ZpbmlzaGVkIGlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQ6OmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMSk7XG59XG5cbi5maW5pc2hlZCB7XG4gIGJvcmRlcjogM3B4IHNvbGlkIHJnYmEoNTIsIDIxMSwgMTUzLCAwLjQpO1xuICBjb2xvcjogcmdiYSgyMzAsIDIzMCwgMjMwLCAwLjQpO1xuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgYm9yZGVyLXJhZGl1czogMjJweDtcbn1cbi5maW5pc2hlZCBpbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XG4gIG1hcmdpbjogMDtcbiAgZm9udDogaW5oZXJpdDtcbiAgY29sb3I6IHJnYmEoNTIsIDIxMSwgMTUzLCAwLjQpO1xuICB3aWR0aDogMS4xNWVtO1xuICBoZWlnaHQ6IDEuMTVlbTtcbiAgYm9yZGVyOiAwLjE1ZW0gc29saWQgcmdiYSg1MiwgMjExLCAxNTMsIDAuNCk7XG4gIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMC4wNzVlbSk7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmZpbmlzaGVkIGlucHV0W3R5cGU9Y2hlY2tib3hdOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICB3aWR0aDogMC42ZW07XG4gIGhlaWdodDogMC42ZW07XG4gIHRyYW5zZm9ybTogc2NhbGUoMCk7XG4gIHRyYW5zaXRpb246IDEyMG1zIHRyYW5zZm9ybSBlYXNlLWluLW91dDtcbiAgYm94LXNoYWRvdzogaW5zZXQgMWVtIDFlbSByZ2JhKDUyLCAyMTEsIDE1MywgMC40KTtcbiAgYm9yZGVyLXJhZGl1czogMC4xZW07XG59XG4uZmluaXNoZWQgaW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZDo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbn1cblxuZm9vdGVyIHtcbiAgY29sb3I6ICNFNkU2RTY7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cbmZvb3RlciBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzM0ZDM5OTtcbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmFkZF90YXNrIHtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xuICB9XG4gIC5idXJnZXJfbWVudSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLnNpZGViYXIge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnNpZGViYXIgLnNpZGViYXJfYmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XG4gICAgYm9yZGVyOiAzcHggc29saWQgIzM0ZDM5OTtcbiAgICBib3gtc2hhZG93OiAwIDAgMnB4IHJlZDtcbiAgfVxuICAubWFpbl9jb250ZW50IHtcbiAgICB3aWR0aDogMTAwdnc7XG4gIH1cbiAgLm1haW5fY29udGVudCBoZWFkZXIgcCB7XG4gICAgZm9udC1zaXplOiA4NXB4O1xuICB9XG4gIC5tYWluX2NvbnRlbnQgLnRhc2tfY29udGVudCB7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbiAgLm1haW5fY29udGVudCAudGFza19jb250ZW50IC5tYWluX3Rhc2tzIC50YXNrc19saXN0IC50YXNrIHtcbiAgICBmb250LXNpemU6IDAuOTVlbTtcbiAgICB3aWR0aDogMzIwcHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XG4gICAgbWFyZ2luOiAycHggNXB4O1xuICB9XG4gIC5tYWluX2NvbnRlbnQgLnRhc2tfY29udGVudCAubWFpbl90YXNrcyAudGFza3NfbGlzdCAudGFzayBpbnB1dFt0eXBlPWNoZWNrYm94XSB7XG4gICAgbWluLXdpZHRoOiAxN3B4O1xuICAgIG1pbi1oZWlnaHQ6IDE3cHg7XG4gIH1cbiAgLm1haW5fY29udGVudCAudGFza19jb250ZW50IC5tYWluX3Rhc2tzIC50YXNrc19saXN0IC50YXNrIC50YXNrX3RpdGxlIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgbWFyZ2luOiAxMHB4O1xuICB9XG4gIC5tYWluX2NvbnRlbnQgLnRhc2tfY29udGVudCAubWFpbl90YXNrcyAudGFza3NfbGlzdCAudGFzayAudHJhc2hfaWNvbiB7XG4gICAgd2lkdGg6IDE5cHg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIC5tYWluX2NvbnRlbnQgLnRhc2tfY29udGVudCAubWFpbl90YXNrcyAudGFza3NfbGlzdCAudGFzayAuaW5mbyBpbnB1dCB7XG4gICAgbWF4LXdpZHRoOiAxMjBweDtcbiAgfVxufVxuLmJ1cmdlcl9tZW51IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDU1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE3cHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0ZDM5OTtcbiAgZ2FwOiA2cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5idXJnZXJfbWVudSAudG9wX2xpbmUsIC5idXJnZXJfbWVudSAubWlkZGxlX2xpbmUsIC5idXJnZXJfbWVudSAuYm90dG9tX2xpbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUyOTNiO1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIHdpZHRoOiA3MCU7XG4gIGhlaWdodDogNnB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG4uYnVyZ2VyX21lbnUgLm1pZGRsZV9saW5lLmFjdGl2ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uYnVyZ2VyX21lbnUgLnRvcF9saW5lLmFjdGl2ZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYW5pbWF0aW9uOiByb3RhdGVUb3AgMC41cyBmb3J3YXJkcztcbn1cbi5idXJnZXJfbWVudSAuYm90dG9tX2xpbmUuYWN0aXZlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBhbmltYXRpb246IHJvdGF0ZUJvdHRvbSAwLjVzIGZvcndhcmRzO1xufVxuLmJ1cmdlcl9tZW51IC50b3BfbGluZS5kZWFjdGl2YXRlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBhbmltYXRpb246IHJldHVyblRvcCAwLjVzIGZvcndhcmRzO1xufVxuLmJ1cmdlcl9tZW51IC5taWRkbGVfbGluZS5kZWFjdGl2YXRlIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5idXJnZXJfbWVudSAuYm90dG9tX2xpbmUuZGVhY3RpdmF0ZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYW5pbWF0aW9uOiByZXR1cm5Cb3R0b20gMC41cyBmb3J3YXJkcztcbn1cbi5idXJnZXJfbWVudSAubGluZV9zaG93IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG5Aa2V5ZnJhbWVzIHJvdGF0ZVRvcCB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgcm90YXRlQm90dG9tIHtcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMCk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgcmV0dXJuVG9wIHtcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxufVxuQGtleWZyYW1lcyByZXR1cm5Cb3R0b20ge1xuICBmcm9tIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xuICB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcbiAgfVxufVxuQGtleWZyYW1lcyBzbG93bHlTaG93IHtcbiAgZnJvbSB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICB0byB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2MDBweCkge1xuICAuYnVyZ2VyX21lbnUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG4gIC5zaWRlYmFyX21vYmlsZSB7XG4gICAgYW5pbWF0aW9uOiBzaG93U2lkZWJhciAwLjNzIGZvcndhcmRzO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgYm90dG9tOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUpO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiA4MCU7XG4gIH1cbiAgLnNpZGViYXJfbW9iaWxlIC5iZ190ZXh0IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5zaWRlYmFyX21vYmlsZSAuc2lkZWJhcl9iZyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLnNpZGViYXJfbW9iaWxlIC5zaWRlYmFyX2JnIC50b2RvX25hdiB7XG4gICAgbWFyZ2luOiA0MHB4IDA7XG4gIH1cbiAgQGtleWZyYW1lcyBzaG93U2lkZWJhciB7XG4gICAgZnJvbSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgICB0byB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgfVxuICBAa2V5ZnJhbWVzIGhpZGVTaWRlYmFyIHtcbiAgICBmcm9tIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB6LWluZGV4OiAtMTtcbiAgICB9XG4gIH1cbn0iLCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Nb2RhayZmYW1pbHk9Um9ib3RvJmRpc3BsYXk9c3dhcCcpO1xyXG5cclxuJG1haW4tY29sb3I6ICMxZTI5M2I7XHJcbi8vICRtYWluLWNvbG9yOiAjMTgxODFiO1xyXG4kZm9udC1jb2xvcjogI0U2RTZFNjtcclxuLy8gJGRhcmtlci1zZWNvbmRhcnk6ICMzOTA0QUI7XHJcbiRkYXJrZXItc2Vjb25kYXJ5OiAjMTBiOTgxO1xyXG4kc2Vjb25kYXJ5LWNvbG9yOiAjMzRkMzk5O1xyXG4vLyAkc2Vjb25kYXJ5LWNvbG9yOiAjNTIwMEZGO1xyXG4kdGhpcmQtY29sb3I6ICMzNGQzOTk7XHJcbiRyZWFkLWNvbG9yOiAjNjc2NzY3O1xyXG4kYWN0aXZlLXByb2plY3QtYmc6ICMwNTk2Njk7XHJcbi8vICRhY3RpdmUtcHJvamVjdC1iZzogIzQ3MDBlMDtcclxuJGhlYWRlci1jb2xvcjogIzBmMTcyYTtcclxuLy8gJHRhc2stZmluaXNoZWQ6IHJnYig0MCwgMjQ4LCAyMDgsIC40KTtcclxuJHRhc2stZmluaXNoZWQ6IHJnYmEoNTIsIDIxMSwgMTUzLCAwLjQpO1xyXG5cclxuJHJlYWQtb3BhY2l0eTogLjQ7XHJcbiRmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XHJcbiRzZWNvbmRhcnktZm9udDogJ01vZGFrJywgY3Vyc2l2ZTtcclxuJGZvbnQtc2l6ZTogMThweDtcclxuJGlucHV0LXdpZHRoOiAyMDBweDtcclxuXHJcbiRsYXlvdXQtYnJlYWtwb2ludC1zbWFsbDogOTYwcHg7XHJcbiRsYXlvdXQtYnJlYWtwb2ludC1tb2JpbGU6IDYwMHB4O1xyXG5cclxuXHJcbi8vICRtYWluLWNvbG9yOiAjMTgxODFiO1xyXG4vLyAkZm9udC1jb2xvcjogI2Y3ZmVlNztcclxuLy8gJHNlY29uZGFyeS1jb2xvcjogI2EzZTYzNTtcclxuLy8gJGRhcmtlci1zZWNvbmRhcnk6ICM4NGNjMTY7XHJcbi8vICR0aGlyZC1jb2xvcjogI2JlZjI2NDtcclxuLy8gJHJlYWQtY29sb3I6ICM2NzY3Njc7XHJcbi8vICRhY3RpdmUtcHJvamVjdC1iZzogIzQ3MDBlMDsiLCJAbWl4aW4gZmxleCgkZGlyZWN0aW9uLCAkanVzdGlmeSwgJGFsaWduKSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb247XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICRqdXN0aWZ5O1xyXG4gICAgYWxpZ24taXRlbXM6ICRhbGlnbjtcclxufVxyXG5cclxuQG1peGluIGFuaW1hdGVPcGFjaXR5KCkge1xyXG4gICAgIEBrZXlmcmFtZXMgZGVjcmVhc2VPcGFjaXR5IHtcclxuICAgICAgICBmcm9tIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdG8ge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGtleWZyYW1lcyBpbmNyZWFzZU9wYWNpdHkge1xyXG4gICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRvIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAdXNlICcuL3N0eWxlcycgYXMgKjtcclxuXHJcbmhlYWRlciB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGZvbnQtZmFtaWx5OiAkc2Vjb25kYXJ5LWZvbnQ7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgY29sb3I6ICRoZWFkZXItY29sb3I7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTMwcHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbn1cclxuXHJcbi5tYWluX2NvbnRlbnQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgc3BhY2UtYmV0d2VlbiwgY2VudGVyKTtcclxufSIsIkB1c2UgJy4vc3R5bGVzJyBhcyAqO1xyXG5cclxuLnNpZGViYXIge1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgLy8gYW5pbWF0aW9uOiBzaG93X3NpZGViYXI7XHJcbiAgICAvLyBhbmltYXRpb24tZHVyYXRpb246IDFzO1xyXG4gICAgQGluY2x1ZGUgYW5pbWF0ZU9wYWNpdHkoKTtcclxuICAgIC8vIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICAvLyB0b3A6IDA7XHJcbiAgICAvLyBtYXJnaW4tdG9wOiAtMTUwcHg7XHJcbiAgICAvLyBwb3NpdGlvbjogZml4ZWQ7XHJcblxyXG5cclxuICAgIC5zaWRlYmFyX2JnIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgICAgIGNvbG9yOiAkZm9udC1jb2xvcjtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgc3BhY2UtYmV0d2VlbiwgY2VudGVyKTtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgXHJcbiAgICBcclxuICAgICAgICAudG9kb19uYXYge1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgY2VudGVyLCBmbGV4LXN0YXJ0KTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMzAlO1xyXG4gICAgICAgICAgICBnYXA6IDEwcHg7XHJcblxyXG4gICAgICAgICAgICAuZGF0ZV9saW5rcyB7XHJcbiAgICAgICAgICAgICAgICBnYXA6IDVweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAzcHggNnB4O1xyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY3RpdmUtcHJvamVjdC1iZztcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA5cHhcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdWwge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIGNlbnRlciwgZmxleC1zdGFydCk7XHJcblxyXG4gICAgICAgICAgICAgICAgLmFjdGl2ZV9wcm9qZWN0IHtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA5cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjdGl2ZS1wcm9qZWN0LWJnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuYmdfdGV4dCB7XHJcbiAgICAgICAgICAgIC8vIGNvbG9yOiAjMzkwNEFCO1xyXG4gICAgICAgICAgICBjb2xvcjogJGRhcmtlci1zZWNvbmRhcnk7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkc2Vjb25kYXJ5LWZvbnQ7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTMwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMjhweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5wcm9qZWN0cyB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgoY29sdW1uLCBjZW50ZXIsIGZsZXgtc3RhcnQpO1xyXG4gICAgICAgICAgICBnYXA6IDEwcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuXHJcbiAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAucHJvamVjdHNfbGlzdCB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgY2VudGVyLCBmbGV4LXN0YXJ0KTtcclxuICAgICAgICAgICAgICAgIGdhcDogOHB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEyMHB4O1xyXG5cclxuICAgICAgICAgICAgICAgIC5wcm9qZWN0X25hbWVfY29udGFpbmVyIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4KHJvdywgc3BhY2UtYmV0d2VlbiwgY2VudGVyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY3RpdmUtcHJvamVjdC1iZztcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAueF9pY29ue1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMThweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleChyb3csIHNwYWNlLWJldHdlZW4sIGNlbnRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDNweCA2cHg7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgLnhfaWNvbntcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuYWN0aXZlX3Byb2plY3Qge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDlweDtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWN0aXZlLXByb2plY3QtYmc7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5wcm9qZWN0X25hbWVfY29udGFpbmVyOm50aC1jaGlsZCgxKSxcclxuICAgICAgICAgICAgLnByb2plY3RfbmFtZV9jb250YWluZXI6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIC54X2ljb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLm5ld19wcm9qZWN0cyB7XHJcbiAgICAgICAgICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkZGFya2VyLXNlY29uZGFyeTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGRhcmtlci1zZWNvbmRhcnk7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDJweCA1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGFya2VyLXNlY29uZGFyeTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpbnB1dFt0eXBlPXRleHRdIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDNweCA1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAkZGFya2VyLXNlY29uZGFyeTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGZvbnQtY29sb3I7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTFweDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSIsIkB1c2UgJy4vc3R5bGVzJyBhcyAqO1xyXG5cclxubWFpbiB7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGNvbG9yOiAkZm9udC1jb2xvcjtcclxuICAgIEBpbmNsdWRlIGZsZXgoY29sdW1uLCBjZW50ZXIsIGNlbnRlcik7XHJcbiAgICBnYXA6IDIwcHg7XHJcbiAgICBhIHtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgY29sb3I6ICRyZWFkLWNvbG9yO1xyXG4gICAgfVxyXG4gICAgLmFkZF90YXNrIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC50YXNrc19saXN0IHtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgICAgIGdhcDogMjBweDtcclxuICAgIH1cclxuXHJcbn0iLCJAdXNlICcuL3N0eWxlcycgYXMgKjtcclxuXHJcbi50YXNrIHtcclxuICAgIHdpZHRoOiA0MDBweDtcclxuICAgIEBpbmNsdWRlIGZsZXgocm93LCBzcGFjZS1iZXR3ZWVuLCBjZW50ZXIpO1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgLy8gYm9yZGVyOiAzcHggc29saWQgJHRoaXJkLWNvbG9yO1xyXG4gICAgLy8gYm9yZGVyLXJhZGl1czogMjJweDtcclxuICAgIG1pbi1oZWlnaHQ6IDcwcHg7XHJcbiAgICB3aWR0aDogODAwcHg7XHJcbiAgICBmb250LXNpemU6ICRmb250LXNpemU7XHJcblxyXG4gICAgLnRhc2tfdGl0bGUge1xyXG4gICAgICAgIC8vIHdpZHRoOiAyNTBweDtcclxuICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICBtYXJnaW46IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmluZm8ge1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgocm93LCBzcGFjZS1iZXR3ZWVuLCBjZW50ZXIpO1xyXG4gICAgICAgIGdhcDogMTBweDtcclxuXHJcbiAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICAgICAgY29sb3I6ICRmb250LWNvbG9yO1xyXG5cclxuICAgICAgICAgICAgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmOjpzZWxlY3Rpb24ge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuaW5wdXRfZGF0ZSB7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJGxheW91dC1icmVha3BvaW50LXNtYWxsKSB7XHJcbiAgICAgICAgd2lkdGg6IDUwMHB4O1xyXG4gICAgfVxyXG4gICAgLmRlbGV0ZV90YXNrLCAuZGF0ZSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChyb3csIGNlbnRlciwgY2VudGVyKTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgLnRyYXNoX2ljb24sIC5jYWxlbmRhcl9pY29uIHtcclxuICAgICAgICB3aWR0aDogMjJweDtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgLmlucHV0X2RhdGUge1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZzogMnB4O1xyXG4gICAgICAgIHdpZHRoOiAyN3B4O1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgY29sb3I6ICM3YzdjN2M7XHJcblxyXG4gICAgICAgICY6Zm9jdXMge1xyXG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjo6c2VsZWN0aW9uIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcclxuICAgICAgICAgICAgY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLm5vdF9maW5pc2hlZCB7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCAkdGhpcmQtY29sb3I7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMnB4O1xyXG4gICAgaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHtcclxuICAgICAgICBhcHBlYXJhbmNlOiBub25lO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250OiBpbmhlcml0O1xyXG4gICAgICAgIGNvbG9yOiAkdGhpcmQtY29sb3I7XHJcbiAgICAgICAgd2lkdGg6IDEuMTVlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMTVlbTtcclxuICAgICAgICBib3JkZXI6IDAuMTVlbSBzb2xpZCAkdGhpcmQtY29sb3I7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMC4zZW07XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTAuMDc1ZW0pO1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgcGxhY2UtY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICAgICAgd2lkdGg6IDAuNmVtO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDAuNmVtO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAxMjBtcyB0cmFuc2Zvcm0gZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDFlbSAxZW0gJHRoaXJkLWNvbG9yO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAwLjFlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6Y2hlY2tlZDo6YmVmb3JlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5maW5pc2hlZCB7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCAkdGFzay1maW5pc2hlZDtcclxuICAgIGNvbG9yOiByZ2IoMjMwLCAyMzAsIDIzMCwgLjQpO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMnB4O1xyXG5cclxuICAgIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udDogaW5oZXJpdDtcclxuICAgICAgICBjb2xvcjogJHRhc2stZmluaXNoZWQ7XHJcbiAgICAgICAgd2lkdGg6IDEuMTVlbTtcclxuICAgICAgICBoZWlnaHQ6IDEuMTVlbTtcclxuICAgICAgICBib3JkZXI6IDAuMTVlbSBzb2xpZCAkdGFzay1maW5pc2hlZDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMC4wNzVlbSk7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBwbGFjZS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICB3aWR0aDogMC42ZW07XHJcbiAgICAgICAgICAgIGhlaWdodDogMC42ZW07XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMCk7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IDEyMG1zIHRyYW5zZm9ybSBlYXNlLWluLW91dDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMWVtIDFlbSAkdGFzay1maW5pc2hlZDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMC4xZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmNoZWNrZWQ6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQHVzZSAnLi9zdHlsZXMnIGFzICo7XHJcblxyXG5mb290ZXIge1xyXG4gICAgY29sb3I6ICRmb250LWNvbG9yO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG5cclxuICAgIGEge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogJHRoaXJkLWNvbG9yO1xyXG4gICAgfVxyXG59IiwiQHVzZSAnLi9zdHlsZXMnIGFzICo7XHJcblxyXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAkbGF5b3V0LWJyZWFrcG9pbnQtbW9iaWxlKSB7XHJcblxyXG4gICAgLmFkZF90YXNrIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC5idXJnZXJfbWVudSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAuc2lkZWJhciB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAuc2lkZWJhcl9iZyB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMnB4IHJlZDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm1haW5fY29udGVudCB7XHJcbiAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG5cclxuICAgICAgICBoZWFkZXIge1xyXG4gICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogODVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnRhc2tfY29udGVudCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBhdXRvO1xyXG5cclxuICAgICAgICAgICAgLm1haW5fdGFza3Mge1xyXG5cclxuICAgICAgICAgICAgICAgIC50YXNrc19saXN0IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgLnRhc2sge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOTVlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMyMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4IDVweDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDE3cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxN3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGFza190aXRsZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogYXV0bztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudHJhc2hfaWNvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTlweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLmluZm8ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTIwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwiQHVzZSAnLi9zdHlsZXMnIGFzICo7XHJcblxyXG4uYnVyZ2VyX21lbnUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICB3aWR0aDogNjBweDtcclxuICAgIGhlaWdodDogNTVweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE3cHg7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktY29sb3I7XHJcbiAgICBnYXA6IDZweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIFxyXG4gICAgLnRvcF9saW5lLCAubWlkZGxlX2xpbmUsIC5ib3R0b21fbGluZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgaGVpZ2h0OiA2cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgfVxyXG4gXHJcblxyXG4gICAgLm1pZGRsZV9saW5lLmFjdGl2ZSB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAudG9wX2xpbmUuYWN0aXZlIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYW5pbWF0aW9uOiByb3RhdGVUb3AgLjVzIGZvcndhcmRzO1xyXG4gICAgfVxyXG5cclxuICAgIC5ib3R0b21fbGluZS5hY3RpdmUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBhbmltYXRpb246IHJvdGF0ZUJvdHRvbSAuNXMgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG4gICAgLnRvcF9saW5lLmRlYWN0aXZhdGUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBhbmltYXRpb246IHJldHVyblRvcCAuNXMgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG4gICAgLm1pZGRsZV9saW5lLmRlYWN0aXZhdGUge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcblxyXG4gICAgLmJvdHRvbV9saW5lLmRlYWN0aXZhdGUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBhbmltYXRpb246IHJldHVybkJvdHRvbSAuNXMgZm9yd2FyZHM7XHJcbiAgICB9XHJcblxyXG4gICAgLmxpbmVfc2hvdyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIHJvdGF0ZVRvcCB7XHJcbiAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0byB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyByb3RhdGVCb3R0b20ge1xyXG4gICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdG8ge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIHJldHVyblRvcCB7XHJcbiAgICAgICAgZnJvbSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdG8ge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGtleWZyYW1lcyByZXR1cm5Cb3R0b20ge1xyXG4gICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0byB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIHNsb3dseVNob3cge1xyXG4gICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0byB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAkbGF5b3V0LWJyZWFrcG9pbnQtbW9iaWxlKSB7XHJcblxyXG5cclxuICAgIC5idXJnZXJfbWVudSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleChjb2x1bW4sIGNlbnRlciwgY2VudGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAuc2lkZWJhcl9tb2JpbGUge1xyXG4gICAgICAgIGFuaW1hdGlvbjogc2hvd1NpZGViYXIgLjNzIGZvcndhcmRzO1xyXG4gICAgICAgIC8vIGZvbnQtc2l6ZTogMS4wNWVtO1xyXG4gICAgICAgIC5iZ190ZXh0IHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwMHB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUpO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLnNpZGViYXJfYmcge1xyXG4gICAgICAgICAgICAvLyBib3gtc2hhZG93OiAwIDAgMTBweCAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBmbGV4KGNvbHVtbiwgY2VudGVyLCBjZW50ZXIpO1xyXG4gICAgICAgICAgICAudG9kb19uYXYge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiA0MHB4IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBrZXlmcmFtZXMgc2hvd1NpZGViYXIge1xyXG4gICAgICAgICAgICBmcm9tIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdG8ge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgQGtleWZyYW1lcyBoaWRlU2lkZWJhciB7XHJcbiAgICAgICAgICAgIGZyb20ge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0byB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=*/