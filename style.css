/*!*************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss ***!
  \*************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Modak&family=Roboto&display=swap);
/*!*****************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss (1) ***!
  \*****************************************************************************************************************/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: #131313;
  font-family: "Roboto", sans-serif;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.content {
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 20px;
}

header {
  float: right;
  width: 80vw;
  font-family: "Modak", cursive;
}
header p {
  color: #000000;
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 130px;
  margin: 0 auto;
}

.sidebar {
  background-color: #5200FF;
  width: 200px;
  height: 100vh;
  float: left;
  margin: 5px;
  border-radius: 10px;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
}
.sidebar .todo_nav {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  font-weight: bolder;
  margin-top: 30%;
  gap: 8px;
}
.sidebar .todo_nav a {
  cursor: pointer;
}
.sidebar .todo_nav a:active {
  border-bottom: 2px solid red;
}
.sidebar .bg_text {
  color: #3904AB;
  font-family: "Modak", cursive;
  transform: rotate(-90deg);
  font-size: 130px;
  overflow: hidden;
  height: 20vw;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}
.sidebar .bg_text span {
  margin-top: 37px;
  margin-left: 120px;
}

main {
  width: auto;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
main a {
  cursor: pointer;
  color: #676767;
}
main .add_task {
  font-weight: bolder;
}
main .tasks_list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
main .new_task_form {
  display: none;
  background-color: #5200FF;
  width: 300px;
  height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 20px;
  gap: 20px;
  animation: appear;
  animation-duration: 0.3s;
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
main .new_task_form input {
  background: none;
  border: 2px solid #28F8D0;
  padding: 6px;
  border-radius: 8px;
  color: #E6E6E6;
  font-weight: bold;
  width: 200px;
}
main .new_task_form input:focus {
  outline: none;
}
main .new_task_form button {
  width: 80px;
  padding: 5px 10px;
  height: auto;
  color: #E6E6E6;
  font-weight: 900;
  border: none;
  background-color: #5200FF;
  border: 2px solid #28F8D0;
  border-radius: 8px;
  cursor: pointer;
}
main .new_task_form button:hover {
  transform: scale(1.05);
  transition: 50ms ease-in-out;
  box-shadow: 0 0 10px #28F8D0;
  background-color: #28F8D0;
  color: #131313;
}

.task {
  width: 400px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  height: 70px;
  width: 800px;
  font-size: 18px;
}
.task .info {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
}
@media (max-width: 960px) {
  .task {
    width: 500px;
  }
}

.not_finished {
  border: 3px solid #28F8D0;
  border-radius: 22px;
}
.not_finished input[type=checkbox] {
  appearance: none;
  background-color: #131313;
  margin: 0;
  font: inherit;
  color: #28F8D0;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid #28F8D0;
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.not_finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em #28F8D0;
  border-radius: 0.1em;
}
.not_finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

.finished {
  border: 3px solid rgba(40, 248, 208, 0.4);
  color: rgba(230, 230, 230, 0.4);
  text-decoration: line-through;
  border-radius: 22px;
}
.finished input[type=checkbox] {
  appearance: none;
  background-color: #131313;
  margin: 0;
  font: inherit;
  color: rgba(40, 248, 208, 0.4);
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid rgba(40, 248, 208, 0.4);
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em rgba(40, 248, 208, 0.4);
  border-radius: 0.1em;
}
.finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

footer {
  color: #E6E6E6;
}
footer a {
  text-decoration: none;
  color: #28F8D0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/