/*!*************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss ***!
  \*************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Modak&family=Roboto&display=swap);
/*!*****************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/sass/main.scss (1) ***!
  \*****************************************************************************************************************/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

*::selection {
  background-color: #34d399;
}

body {
  background-color: #1e293b;
  font-family: "Roboto", sans-serif;
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: row-reverse;
  justify-content: space-between;
  align-items: center;
}
body .main_content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 100%;
}
@keyframes decreaseOpacity {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}
@keyframes increaseOpacity {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
body .main_content .task_content .main_tasks {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
body .new_task_form {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: none;
  background-color: #1e293b;
  width: 300px;
  height: 200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 20px;
  gap: 20px;
  animation: appear;
  animation-duration: 0.3s;
  border: 4px solid #34d399;
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
    z-index: 1;
  }
}
@keyframes hideTaskForm {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    z-index: -1;
  }
}
body .new_task_form input {
  background: none;
  border: none;
  border-bottom: 2px solid #34d399;
  padding: 6px;
  color: #E6E6E6;
  font-weight: bold;
  width: 200px;
}
body .new_task_form input:focus {
  outline: none;
}
body .new_task_form button {
  width: 80px;
  padding: 5px 10px;
  height: auto;
  color: #E6E6E6;
  font-weight: 900;
  border: none;
  background-color: #34d399;
  border: 2px solid #34d399;
  border-radius: 8px;
  cursor: pointer;
}
body .new_task_form button:hover {
  transform: scale(1.05);
  transition: 50ms ease-in-out;
  box-shadow: 0 0 10px #34d399;
  background-color: #34d399;
  color: #1e293b;
}

header {
  width: auto;
  font-family: "Modak", cursive;
}
header p {
  color: #0f172a;
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-size: 130px;
  margin: 0 auto;
}

.main_content {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}

.sidebar {
  width: 200px;
  height: 100%;
  padding: 5px;
}
@keyframes decreaseOpacity {
  from {
    opacity: 1;
  }
  to {
    opacity: 0.5;
  }
}
@keyframes increaseOpacity {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
.sidebar .sidebar_bg {
  border-radius: 15px;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  overflow: hidden;
  width: 100%;
  height: 100%;
  background-color: #34d399;
}
.sidebar .sidebar_bg .todo_nav {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  font-weight: bolder;
  margin-top: 30%;
  gap: 10px;
}
.sidebar .sidebar_bg .todo_nav .date_links {
  gap: 5px;
}
.sidebar .sidebar_bg .todo_nav a {
  cursor: pointer;
  padding: 3px 6px;
}
.sidebar .sidebar_bg .todo_nav a:hover {
  background-color: #059669;
  border-radius: 9px;
}
.sidebar .sidebar_bg .todo_nav ul {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
}
.sidebar .sidebar_bg .todo_nav ul .active_project {
  border-radius: 9px;
  background-color: #059669;
}
.sidebar .sidebar_bg .bg_text {
  color: #10b981;
  font-family: "Modak", cursive;
  transform: rotate(-90deg);
  font-size: 130px;
  margin-left: 128px;
  margin-bottom: 50px;
}
.sidebar .sidebar_bg .projects {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 10px;
  margin-top: 5px;
}
.sidebar .sidebar_bg .projects span {
  margin-left: -15px;
  font-size: 1.1em;
}
.sidebar .sidebar_bg .projects a {
  font-size: 0.9em;
}
.sidebar .sidebar_bg .projects .projects_list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 8px;
  width: 120px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container:hover {
  background-color: #059669;
  border-radius: 9px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container:hover .x_icon {
  display: block;
  width: 18px;
  height: auto;
  margin-right: 2px;
  cursor: pointer;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container a {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  text-align: center;
  overflow-wrap: break-word;
  padding: 3px 6px;
}
.sidebar .sidebar_bg .projects .projects_list .project_name_container .x_icon {
  display: none;
}
.sidebar .sidebar_bg .projects .projects_list .active_project {
  border-radius: 9px;
  background-color: #059669;
}
.sidebar .sidebar_bg .projects .project_name_container:nth-child(1):hover .x_icon,
.sidebar .sidebar_bg .projects .project_name_container:nth-child(2):hover .x_icon {
  display: none;
}
.sidebar .sidebar_bg .projects .new_projects button {
  width: 100px;
  border: 2px solid #10b981;
  color: #10b981;
  font-weight: bolder;
  border-radius: 10px;
  padding: 2px 5px;
  background: none;
  cursor: pointer;
}
.sidebar .sidebar_bg .projects .new_projects button:hover {
  background-color: #10b981;
  color: #1e293b;
}
.sidebar .sidebar_bg .projects .new_projects input[type=text] {
  margin-bottom: 10px;
  width: 100px;
  display: none;
  padding: 3px 5px;
  background: none;
  border: 2px solid #10b981;
  color: #E6E6E6;
  font-weight: bold;
  border-radius: 11px;
}
.sidebar .sidebar_bg .projects .new_projects input[type=text]:focus {
  outline: none;
}

main {
  width: auto;
  color: #E6E6E6;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}
main a {
  cursor: pointer;
  color: #676767;
}
main .add_task {
  font-weight: bolder;
}
main .tasks_list {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
}

.task {
  width: 400px;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 10px 15px;
  height: 70px;
  width: 800px;
  font-size: 18px;
}
.task .task_title {
  width: auto;
  max-width: 250px;
  word-wrap: break-word;
  margin: 10px;
}
.task .info {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
}
.task .info input {
  background-color: #1e293b;
  border: none;
  border-bottom: 2px solid #34d399;
  color: #E6E6E6;
}
.task .info input:focus {
  outline: none;
}
.task .info input::selection {
  color: #1e293b;
}
.task .info .input_date {
  border: none;
}
@media (max-width: 960px) {
  .task {
    width: 500px;
  }
}
.task .delete_task, .task .date {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
.task .trash_icon, .task .calendar_icon {
  width: 22px;
  height: auto;
}
.task .input_date {
  cursor: pointer;
  border: none;
  padding: 2px;
  width: 27px;
  margin: 0;
  font-size: 1.1em;
  background: none;
  color: #7c7c7c;
}
.task .input_date:focus {
  outline: none;
}
.task .input_date::selection {
  background-color: #34d399;
  color: #1e293b;
}

.not_finished {
  border: 3px solid #34d399;
  border-radius: 22px;
}
.not_finished input[type=checkbox] {
  appearance: none;
  background-color: #1e293b;
  margin: 0;
  font: inherit;
  color: #34d399;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid #34d399;
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.not_finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em #34d399;
  border-radius: 0.1em;
}
.not_finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

.finished {
  border: 3px solid rgba(52, 211, 153, 0.4);
  color: rgba(230, 230, 230, 0.4);
  text-decoration: line-through;
  border-radius: 22px;
}
.finished input[type=checkbox] {
  appearance: none;
  background-color: #1e293b;
  margin: 0;
  font: inherit;
  color: rgba(52, 211, 153, 0.4);
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid rgba(52, 211, 153, 0.4);
  border-radius: 0.3em;
  transform: translate(-0.075em);
  display: grid;
  place-content: center;
  cursor: pointer;
}
.finished input[type=checkbox]::before {
  content: "";
  width: 0.6em;
  height: 0.6em;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em rgba(52, 211, 153, 0.4);
  border-radius: 0.1em;
}
.finished input[type=checkbox]:checked::before {
  transform: scale(1);
}

footer {
  color: #E6E6E6;
  margin-bottom: 5px;
}
footer a {
  text-decoration: none;
  color: #34d399;
}

@media all and (max-width: 600px) {
  .add_task {
    margin-bottom: 60px;
  }
  .burger_menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar {
    display: none;
  }
  .sidebar .sidebar_bg {
    background-color: #1e293b;
    border: 3px solid #34d399;
    box-shadow: 0 0 2px red;
  }
  .main_content {
    width: 100vw;
  }
  .main_content header p {
    font-size: 85px;
  }
  .main_content .task_content {
    width: auto;
  }
  .main_content .task_content .main_tasks .tasks_list .task {
    font-size: 0.95em;
    width: 320px;
    height: auto;
    min-height: 50px;
    margin: 2px 5px;
  }
  .main_content .task_content .main_tasks .tasks_list .task input[type=checkbox] {
    min-width: 17px;
    min-height: 17px;
  }
  .main_content .task_content .main_tasks .tasks_list .task .task_title {
    width: auto;
    word-wrap: break-word;
    margin: 10px;
  }
  .main_content .task_content .main_tasks .tasks_list .task .trash_icon {
    width: 19px;
    height: auto;
  }
  .main_content .task_content .main_tasks .tasks_list .task .info input {
    max-width: 120px;
  }
}
.burger_menu {
  display: none;
  -webkit-tap-highlight-color: transparent;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translate(-50%);
  margin-bottom: 30px;
  width: 60px;
  height: 55px;
  border-radius: 17px;
  color: white;
  background-color: #34d399;
  gap: 6px;
  cursor: pointer;
}
.burger_menu .top_line, .burger_menu .middle_line, .burger_menu .bottom_line {
  background-color: #1e293b;
  display: inline;
  width: 70%;
  height: 6px;
  border-radius: 4px;
}
.burger_menu .middle_line.active {
  display: none;
}
.burger_menu .top_line.active {
  position: absolute;
  animation: rotateTop 0.5s forwards;
}
.burger_menu .bottom_line.active {
  position: absolute;
  animation: rotateBottom 0.5s forwards;
}
.burger_menu .top_line.deactivate {
  position: absolute;
  animation: returnTop 0.5s forwards;
}
.burger_menu .middle_line.deactivate {
  display: flex;
}
.burger_menu .bottom_line.deactivate {
  position: absolute;
  animation: returnBottom 0.5s forwards;
}
.burger_menu .line_show {
  position: relative;
  display: inline;
}
@keyframes rotateTop {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(45deg);
  }
}
@keyframes rotateBottom {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(-45deg);
  }
}
@keyframes returnTop {
  from {
    transform: rotate(45deg);
  }
  to {
    transform: rotate(0);
  }
}
@keyframes returnBottom {
  from {
    transform: rotate(-45deg);
  }
  to {
    transform: rotate(0);
  }
}
@keyframes slowlyShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media all and (max-width: 600px) {
  .burger_menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar_mobile {
    animation: showSidebar 0.3s forwards;
    position: absolute;
    left: 50%;
    bottom: 0;
    margin-bottom: 100px;
    transform: translate(-50%);
    display: flex;
    height: auto;
    width: 80%;
  }
  .sidebar_mobile .bg_text {
    display: none;
  }
  .sidebar_mobile .sidebar_bg {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .sidebar_mobile .sidebar_bg .todo_nav {
    margin: 40px 0;
  }
  @keyframes showSidebar {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  @keyframes hideSidebar {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
      z-index: -1;
    }
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/